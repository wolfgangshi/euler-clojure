(ns euler.even_fab
  (:gen-class)
  )

(defn fab
  ([] (fab 1 2))
  ([n m] (cons n (lazy-seq (fab m (+ n m)))))
)

(defn sum-of-even-fab
  "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  
  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."
  [& args]
  (reduce + 
          (->> (fab)
              (filter even?)
              (take-while #(< % 4000000))
              )
          ))

(defn -main 
 [& args]
 (println (take 10 (fab)))

 (let [result (sum-of-even-fab)]
   (println result)
   )
)
